[{"D:\\Dinosaur-game-reacjs-fb\\src\\index.js":"1","D:\\Dinosaur-game-reacjs-fb\\src\\reportWebVitals.js":"2","D:\\Dinosaur-game-reacjs-fb\\src\\App.js":"3","D:\\Dinosaur-game-reacjs-fb\\src\\components\\HomePage.js":"4","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Upload.js":"5","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Todo.js":"6","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Login.js":"7","D:\\Dinosaur-game-reacjs-fb\\src\\lib\\firebase.js":"8","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Input.js":"9","D:\\Dinosaur-game-reacjs-fb\\src\\components\\PlayerHistory.js":"10","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Game.js":"11","D:\\Dinosaur-game-reacjs-fb\\src\\components\\TodoItem.js":"12","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Filter.js":"13","D:\\Dinosaur-game-reacjs-fb\\src\\lib\\util.js":"14","D:\\Dinosaur-game-reacjs-fb\\src\\hooks\\fbStorage.js":"15","D:\\Dinosaur-game-reacjs-fb\\src\\hooks\\storage.js":"16","D:\\Dinosaur-game-reacjs-fb\\src\\components\\LossGameDiaLog.js":"17"},{"size":517,"mtime":1623471020836,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1623471020837,"results":"20","hashOfConfig":"19"},{"size":1791,"mtime":1623471020805,"results":"21","hashOfConfig":"19"},{"size":225,"mtime":1623471020806,"results":"22","hashOfConfig":"19"},{"size":1777,"mtime":1623471020809,"results":"23","hashOfConfig":"19"},{"size":2283,"mtime":1623471020808,"results":"24","hashOfConfig":"19"},{"size":2925,"mtime":1623471109979,"results":"25","hashOfConfig":"19"},{"size":2969,"mtime":1623471020837,"results":"26","hashOfConfig":"19"},{"size":938,"mtime":1623471020807,"results":"27","hashOfConfig":"19"},{"size":319,"mtime":1623471020808,"results":"28","hashOfConfig":"19"},{"size":10273,"mtime":1623471020806,"results":"29","hashOfConfig":"19"},{"size":678,"mtime":1623471020809,"results":"30","hashOfConfig":"19"},{"size":817,"mtime":1623471020806,"results":"31","hashOfConfig":"19"},{"size":68,"mtime":1623471020837,"results":"32","hashOfConfig":"19"},{"size":1131,"mtime":1623471020810,"results":"33","hashOfConfig":"19"},{"size":1022,"mtime":1623471020810,"results":"34","hashOfConfig":"19"},{"size":722,"mtime":1623471020808,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dv0jmk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"D:\\Dinosaur-game-reacjs-fb\\src\\index.js",[],"D:\\Dinosaur-game-reacjs-fb\\src\\reportWebVitals.js",[],"D:\\Dinosaur-game-reacjs-fb\\src\\App.js",["82","83","84","85","86"],"import React, { useEffect, useState } from 'react'\r\n\r\n/* スタイルシート */\r\nimport './styles/main.css';\r\n\r\n/* コンポーネント */\r\nimport Todo from './components/Todo';\r\nimport Login from \"./components/Login\";\r\nimport { auth, storeUserInfo, updateUser } from \"./lib/firebase\";\r\nimport Upload from \"./components/Upload\";\r\nimport HomePage from './components/HomePage';\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState([]);\r\n  \r\n  \r\n  // useEffect(() => {\r\n  //   auth.onAuthStateChanged(async (user) => {\r\n  //     setLoading(false);\r\n  //     let newUser = null;\r\n  //     if (user) {\r\n  //       newUser = await storeUserInfo(user);\r\n  //     }\r\n  //     setUser(newUser);\r\n  //   });\r\n    \r\n  // }, []);\r\n  \r\n  const logout = () => {\r\n    auth.signOut();\r\n  };\r\n  \r\n  const handleImageChanged = async downlodUrl => {\r\n    await updateUser(user, downlodUrl);\r\n  }\r\n  \r\n  const HeaderContent = () => {\r\n    if (user) {\r\n      return (\r\n        <div class=\"navbar-end\">\r\n          <div class=\"navbar-item\">\r\n            <Upload userImage={user.image} onSletctedImage={handleImageChanged} />\r\n            {user.name}\r\n          </div>\r\n          <div class=\"navbar-item\">\r\n            <button class=\"button is-danger is-light is-small\" onClick={logout} > Logout</button>\r\n          </div>\r\n        </div >\r\n      )\r\n    } else {\r\n      return (<Login />)\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"container is-fluid\">\r\n      <header class=\"navbar\">\r\n        {loading ? (\r\n          <p>\r\n            LOADING.....\r\n          </p>\r\n        ) : (\r\n          <HeaderContent />\r\n        )}\r\n      </header >\r\n      <div>\r\n        {user && <HomePage  \r\n        />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Dinosaur-game-reacjs-fb\\src\\components\\HomePage.js",["87","88"],"import Game from './Game';\r\nimport PlayerHistory from './PlayerHistory';\r\nimport Todo from './Todo';\r\nfunction HomePage (){\r\n    return (\r\n    <div>\r\n        <Game />\r\n        \r\n    </div>\r\n    );\r\n}\r\nexport default HomePage;","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Upload.js",["89"],"import React, { useState } from 'react'\r\n\r\n/* ライブラリ */\r\nimport { uploadImage } from \"../lib/firebase\";\r\n\r\nfunction Upload({ userImage, onSletctedImage }) {\r\n  const [isModal, setIsModal] = useState(false);\r\n  const active = isModal ? \"is-active\" : \"\";\r\n  const [imageUrl, setImageUrl] = useState(userImage);\r\n\r\n  const handleImage = async event => {\r\n    const image = event.target.files[0];\r\n    const imageUrl = await uploadImage(image);\r\n    onSletctedImage(imageUrl);\r\n    setImageUrl(imageUrl);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsModal(!isModal);\r\n  };\r\n\r\n  const ImageViewer = () => {\r\n    if (!imageUrl) {\r\n      return <i class=\"fas fa-user\"></i>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <img src={imageUrl} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={`modal ${active}`}>\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content\">\r\n          <div class=\"file is-boxed\" >\r\n            <label class=\"file-label\">\r\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\r\n              <span class=\"file-cta\">\r\n                <span class=\"file-icon\">\r\n                  <i class=\"fas fa-upload\"></i>\r\n                </span>\r\n                <span class=\"file-label\">画像を選択してください</span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\r\n        <span class=\"icon\">\r\n          <ImageViewer />\r\n        </span>\r\n      </button>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Upload","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Todo.js",["90","91","92"],"import React, { useState } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\nimport useFbStorage from '../hooks/fbStorage';\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  \r\n  //const [items, putItems, clearItems] = useStorage();\r\n  const [items, addItem, updateItem, clearItems] = useFbStorage('todos');\r\n  function addItems(obj){\r\n    //putItems([...items, obj]);\r\n    addItem(obj);\r\n    console.log(items);\r\n  }\r\n  //\r\n  function handleCheck(checked){\r\n    /*const newItems = items.map(item => {\r\n      if(item.key === checked.key){\r\n        item.done = !item.done;\r\n      }\r\n      return item;\r\n    })\r\n    putItems(newItems);*/\r\n    updateItem(checked);\r\n  }\r\n  //filter = 'ALL' (default)\r\n  const [filter, setFilter] = useState('ALL');\r\n  \r\n  const displayItems = items.filter(item => {\r\n    if(filter === 'ALL') return true;\r\n    if(filter === 'TODO') return !item.done;\r\n    if(filter === 'DONE') return item.done;\r\n  })\r\n  \r\n  function handleFilterChange(value){\r\n    setFilter(value);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">\r\n        ITSS ToDoアプリ\r\n      </div>\r\n      \r\n      <Input\r\n        onAdd = {addItems}\r\n      />\r\n      <Filter\r\n        onChange = {handleFilterChange}\r\n        value = {filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        \r\n        <label className=\"panel-block\">\r\n            <TodoItem\r\n              key = {item.id}\r\n              item = {item}\r\n              onCheck = {handleCheck}\r\n            />\r\n        </label>\r\n      ))\r\n      }\r\n      \r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n        \r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button class=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Login.js",["93","94","95"],"import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\n/* ライブラリ */\r\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\r\n\r\nfunction Login() {\r\n  return (\r\n    \r\n      <div className=\"container\">\r\n        <div>\r\n          <div className=\"modal-dialog login animated\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                \r\n                <h4 className=\"modal-title\">Login with</h4>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"box\">\r\n                  <div className=\"content\">\r\n                   \r\n                      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n                    <div className=\"form loginBox\">\r\n                      <form method=\"post\" action=\"/login\" acceptCharset=\"UTF-8\">\r\n                        <input id=\"email\" className=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\" />\r\n                        <input id=\"password\" className=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n                        <input className=\"btn btn-default btn-login\" type=\"button\" defaultValue=\"Login\" onclick=\"loginAjax()\" />\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"box\">\r\n                  <div className=\"content registerBox\" style={{ display: 'none' }}>\r\n                    <div className=\"form\">\r\n                      <form method=\"post\" html=\"{:multipart=>true}\" data-remote=\"true\" action=\"/register\" acceptCharset=\"UTF-8\">\r\n                        <input id=\"email\" className=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\" />\r\n                        <input id=\"password\" className=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n                        <input id=\"password_confirmation\" className=\"form-control\" type=\"password\" placeholder=\"Repeat Password\" name=\"password_confirmation\" />\r\n                        <input className=\"btn btn-default btn-register\" type=\"submit\" defaultValue=\"Create account\" name=\"commit\" />\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <div className=\"forgot login-footer\">\r\n                  <span>Looking to\r\n                    <a >create an account</a>\r\n                    ?</span>\r\n                </div>\r\n                <div className=\"forgot register-footer\" style={{ display: 'none' }}>\r\n                  <span>Already have an account?</span>\r\n                  <a >Login</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Dinosaur-game-reacjs-fb\\src\\lib\\firebase.js",[],"D:\\Dinosaur-game-reacjs-fb\\src\\components\\Input.js",["96","97"],"import React, { useState } from 'react';\r\nimport {getKey} from '../lib/util'\r\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input( {onAdd} ) {\r\n  const [obj, setObj] = useState();\r\n  \r\n  function handleChange(evt){\r\n    setObj({\r\n      //key: getKey(),\r\n      text: evt.target.value,\r\n      done: false\r\n    })\r\n  }\r\n  \r\n  function handleKeyDown(evt){\r\n    if(evt.key == 'Enter')\r\n      onAdd(obj);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"panel-block\">\r\n      \r\n      <input\r\n        class = 'input'\r\n        type = 'text'\r\n        placeholder = 'Todoを入力してください'\r\n        \r\n        onChange = {handleChange}\r\n        onKeyDown = {handleKeyDown}\r\n        \r\n      />\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\Dinosaur-game-reacjs-fb\\src\\components\\PlayerHistory.js",["98","99","100","101"],"import useFbStorage from '../hooks/fbStorage';\r\n\r\nfunction PlayerHistory (){\r\n    const [items, addItem, updateItem, clearItems] = useFbStorage('todos');\r\n        \r\n    return (\r\n    <div>\r\n        <div>\r\n            \r\n            1234\r\n          \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default PlayerHistory;","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Game.js",["102","103","104","105","106","107","108"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport LossGameDiaLog from './LossGameDiaLog'\r\n\r\nfunction Game({auth, store, user,setUser, setLoading}){\r\n    //const [check, setCheck] = useState(true);\r\n    \r\n    let canvas, ctx, loss_id; \r\n\r\n   \r\n\r\n    // Variables\r\n    let score;\r\n    let scoreText;\r\n    let highscore;\r\n    let highscoreText;\r\n    let player;\r\n    let gravity;\r\n    let obstacles = [];\r\n    let gameSpeed;\r\n    let keys = {};\r\n    let globalID;\r\n    let check = true;\r\n    let image_player ;\r\n    let image_obs;\r\n    let nam = false;\r\n    let score_loss = 0;\r\n    let loss = false;\r\n    \r\n    const createImagePlayer = () =>{\r\n        image_player = new Image ();\r\n        image_player.src = require('../images/player/dino-chien.png').default;\r\n        image_player.alt = 'dino';\r\n\r\n    }\r\n    \r\n    const setImagePlayer = () =>{\r\n        if (nam)\r\n            image_player.src = require('../images/player/dino-thu.png').default;\r\n        else\r\n            image_player.src = require('../images/player/dino-chien.png').default;\r\n    }\r\n    \r\n    const createImageObs = () =>{\r\n      image_obs = new Image();\r\n      image_obs.src = require('../images/obs/obs0.png').default;\r\n      image_obs.alt = 'dino';\r\n    }\r\n    const setImageObs = () => {\r\n        let random = RandomIntInRange(0,10)\r\n        image_obs.src = require('../images/obs/obs' + random +'.png').default;\r\n        image_obs.alt = 'obstacle '+ random;\r\n        return image_obs;\r\n    }\r\n    // Event Listeners\r\n    document.addEventListener('keydown', function (evt) {\r\n      keys[evt.code] = true;\r\n    });\r\n    document.addEventListener('keyup', function (evt) {\r\n      keys[evt.code] = false;\r\n    });\r\n    // nguoi choi\r\n\r\n    const player_init = (x,y,w,h,c) => {\r\n        const obj = {\r\n         \r\n            pos_x : x,\r\n            pos_y : y,\r\n            width : w,\r\n            height : h,\r\n            color : c,\r\n            dy : 0,\r\n            jumpForce : 15,\r\n            originalHeight : h,\r\n            grounded : false,\r\n            jumpTimer : 0\r\n        };\r\n        \r\n        return obj;\r\n    }\r\n    // method Jump of Player\r\n    const JumpPlayer = (item) => {\r\n    \r\n        if(item.grounded && item.jumpTimer == 0){\r\n            item.jumpTimer = 1;\r\n            item.dy -= item.jumpForce;\r\n        } else if (item.jumpTimer > 0 && item.jumpTimer < 15){\r\n            item.jumpTimer++;\r\n            item.dy = -item.jumpForce - (item.jumpTimer / 50);\r\n        }\r\n         \r\n    }\r\n    // method Draw of Player\r\n    const DrawPlayer = (item) => {\r\n      \r\n        ctx.beginPath();\r\n        ctx.fillStyle = 'transparent';//item.color;\r\n        ctx.fillRect(item.pos_x, item.pos_y, item.width, item.height);\r\n        ctx.drawImage(image_player,item.pos_x,item.pos_y,item.width,item.height);\r\n        ctx.closePath();\r\n        \r\n         \r\n    }\r\n    // method Animate of Player\r\n    const AnimatePlayer = (item) => {\r\n        \r\n        if (keys['Space'] || keys['KeyW'] || keys['ArrowUp']){\r\n            JumpPlayer(item);\r\n        } else {\r\n            item.jumpTimer = 0;\r\n        }\r\n            \r\n            \r\n        if (keys['ShiftLeft'] || keys['KeyS'] || keys['ArrowDown']) {\r\n            item.height = item.originalHeight / 2;\r\n            nam = true;\r\n            setImagePlayer();\r\n        } else {\r\n            item.height = item.originalHeight;\r\n            nam =false;\r\n            setImagePlayer();\r\n        }\r\n        \r\n        item.pos_y += item.dy;\r\n                \r\n        //Gravity\r\n        if((item.pos_y + item.height) < canvas.height){\r\n            item.dy += gravity;\r\n            item.grounded = false;\r\n        }else {\r\n            item.dy = 0;\r\n            item.grounded = true;\r\n            item.pos_y = canvas.height - item.height;\r\n        }\r\n        DrawPlayer(item);\r\n           \r\n    }\r\n    // chuong ngai vat\r\n    const obstacle_init = (x,y,w,h,c,img) => {\r\n        const obj = {\r\n            pos_x : x,\r\n            pos_y : y,\r\n            width : w,\r\n            height : h,\r\n            color : c,\r\n            dx : -gameSpeed,\r\n            image: img\r\n        };\r\n      \r\n        return obj;\r\n    }\r\n    const DrawObstacle = (item) => {\r\n     \r\n        ctx.beginPath();\r\n        ctx.fillStyle = 'transparent';//item.color;\r\n        ctx.fillRect(item.pos_x, item.pos_y, item.width, item.height);\r\n        ctx.drawImage(item.image,item.pos_x,item.pos_y,item.width,item.height)\r\n        ctx.closePath();\r\n    }\r\n    // method update of Obstacle\r\n    const UpdateObstacle = (item) =>{\r\n        \r\n        item.pos_x += item.dx;\r\n        DrawObstacle(item);\r\n        item.dx = -gameSpeed;\r\n      \r\n    }\r\n    \r\n     //Class Text\r\n    // constructor of Text\r\n    const text_init = (t,x,y,a,c,s) => {\r\n        const obj = {\r\n            text: t,\r\n            pos_x : x,\r\n            pos_y : y,\r\n            align : a,\r\n            color : c,\r\n            size : s,\r\n        };\r\n        return obj;\r\n    }\r\n    // method Draw of Text\r\n    const DrawText = (item) =>{\r\n        ctx.beginPath();\r\n        ctx.fillStyle = item.color;\r\n        ctx.font = item.size + \"px sans-serif\";\r\n        ctx.textAlign = item.align;\r\n        ctx.fillText(item.text, item.pos_x, item.pos_y);\r\n        ctx.closePath();\r\n        \r\n    }\r\n    // Game Functions\r\n    function SpawnObstacle () {\r\n        let size = RandomIntInRange(20, 70);\r\n        let type = RandomIntInRange(0, 1);\r\n        createImageObs();\r\n        let obstacle = obstacle_init(canvas.width + size, canvas.height - size, size, size, '#2484E4',setImageObs());\r\n        \r\n        if (type == 1) {\r\n            obstacle.pos_y -= player.originalHeight - 10;\r\n        }\r\n        obstacles.push(obstacle);\r\n    }\r\n    \r\n    \r\n    function RandomIntInRange (min, max) {\r\n        return Math.round(Math.random() * (max - min) + min);\r\n    }\r\n    \r\n    function Start () {\r\n    \r\n        canvas  = document.getElementById('game');\r\n        loss_id =document.getElementById('loss');\r\n        console.log(canvas);\r\n        if(canvas.getContext)\r\n            ctx = canvas.getContext('2d');\r\n        \r\n        console.log(ctx);\r\n        ctx.font = \"20px sans-serif\";\r\n    \r\n        gameSpeed = 3;\r\n        gravity = 1;\r\n    \r\n        score = 0;\r\n        highscore = 0;\r\n        if (window.localStorage.getItem('highscore')) {\r\n            highscore = window.localStorage.getItem('highscore');\r\n        }\r\n        \r\n        player = player_init(20, 0, 50, 50, '#FF5858');\r\n        createImagePlayer();\r\n        scoreText = text_init(\"Score: \" + score, 25, 25, \"left\", \"#212121\", \"20\");\r\n        highscoreText = text_init(\"Highscore: \" + highscore, canvas.width - 25, 25, \"right\", \"#212121\", \"20\");\r\n    \r\n        globalID = requestAnimationFrame(Update);\r\n    }\r\n    \r\n    let initialSpawnTimer = 200;\r\n    let spawnTimer = initialSpawnTimer;\r\n    function Update () {\r\n       // if (!loss)\r\n            globalID = requestAnimationFrame(Update);\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n        spawnTimer--;\r\n        if (spawnTimer <= 0) {\r\n            SpawnObstacle();\r\n            //console.log(obstacles);\r\n            spawnTimer = initialSpawnTimer - gameSpeed * 8;\r\n        \r\n            if (spawnTimer < 60) {\r\n                spawnTimer = 60;\r\n            }\r\n        }\r\n    \r\n        // Spawn Enemies\r\n        for (let i = 0; i < obstacles.length; i++) {\r\n            let o = obstacles[i];\r\n    \r\n            if (o.pos_x + o.width < 0) {\r\n                obstacles.splice(i, 1);\r\n            }\r\n    \r\n            if (\r\n                player.pos_x < o.pos_x + o.width &&\r\n                player.pos_x + player.width > o.pos_x &&\r\n                player.pos_y < o.pos_y + o.height &&\r\n                player.pos_y + player.height > o.pos_y\r\n            ) {\r\n                score_loss = score;\r\n                Stop();\r\n                document.getElementById('text-loss').innerHTML = 'Ban danh duoc: ' + score_loss + '/' + highscore + ' diem.';\r\n                // set style id = loss\r\n                loss_id.style.width = canvas.width + 5 + 'px';\r\n                loss_id.style.height = canvas.height + 5 + 'px';\r\n                loss_id.style.margin = -(canvas.height + 10) + 'px 0px';\r\n                loss_id.style.display = 'flex';\r\n                //\r\n                //alert(\"Ban danh duoc \" + score + \" diem.\");\r\n                obstacles = [];\r\n                score = 0;\r\n                spawnTimer = initialSpawnTimer;\r\n                gameSpeed = 3;\r\n                window.localStorage.setItem('highscore', highscore);\r\n                //Stop();\r\n                loss = true;\r\n                \r\n                \r\n                Stop();\r\n            }\r\n    \r\n            UpdateObstacle(o);\r\n        }\r\n    \r\n        AnimatePlayer(player);\r\n    \r\n        score++;\r\n        if (loss)\r\n            score = score_loss;\r\n        scoreText.text = \"Score: \" + score;\r\n        DrawText(scoreText);\r\n    \r\n        if (score > highscore) {\r\n            highscore = score;\r\n            highscoreText.text = \"Highscore: \" + highscore;\r\n        }\r\n      \r\n        DrawText(highscoreText);\r\n    \r\n        gameSpeed += 0.003;\r\n    }\r\n    const Stop = () => {\r\n        \r\n        window.cancelAnimationFrame(globalID);\r\n         score = score_loss;\r\n        // console.log(score);\r\n        \r\n    }\r\n    \r\n    const setLoss = () =>{\r\n        loss = !loss;\r\n    }\r\n    const setDisplay = () => {\r\n        if (loss)\r\n            loss_id.style.display = 'flex';\r\n        else\r\n            loss_id.style.display = 'none';\r\n    }\r\n    \r\n    const getScore = () =>{\r\n        return score_loss;   \r\n    }\r\n    const getHighscore = () => {\r\n        return highscore;\r\n    }\r\n    useEffect(() => {\r\n        Start();\r\n    },[]);\r\n    \r\n    \r\n    return (\r\n    <div>   \r\n    <div>\r\n    <div> Hello </div>\r\n    <div> ok man </div>\r\n   \r\n    <div>\r\n        <canvas class=\"dinosaur-game\" id=\"game\" width=\"1200\" height=\"450\" >\r\n        </canvas>\r\n        <div class='game-loss' id = 'loss'>\r\n            \r\n            <LossGameDiaLog \r\n            \r\n                setDisplay = {setDisplay}\r\n                start = {Start}\r\n                setLoss= {setLoss}\r\n            />\r\n        </div>\r\n     \r\n    </div>\r\n    </div>\r\n    </div>\r\n    );\r\n        \r\n    \r\n}\r\n\r\nexport default Game;","D:\\Dinosaur-game-reacjs-fb\\src\\components\\TodoItem.js",["109","110"],"import {useState} from 'react';\r\n\r\n/* \r\n  【TodoItemコンポーネント】\r\n　・Todoアイテムを表示する\r\n　・チェックボックスにチェックが入っているか管理する\r\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\r\n*/\r\nfunction TodoItem( {item, onCheck}  ) {\r\n  const [check, setCheck] = useState(false);\r\n  function changeTextColor(){\r\n    onCheck(item);\r\n  }\r\n  return (\r\n    <label className=\"panel-block\" class = {item.done ? 'has-text-grey-light' : ''}>\r\n      <input type=\"checkbox\" onChange={changeTextColor} />\r\n      {item.text}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","D:\\Dinosaur-game-reacjs-fb\\src\\components\\Filter.js",["111","112","113"],"/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter( {value, onChange} ) {\r\n  function handleClick(key, evt){\r\n    evt.preventDefault();\r\n    onChange(key);\r\n  }\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a href='#' onClick={handleClick.bind(null, 'ALL')} class={value === 'ALL' ? 'is-active' : ''}>全て</a>\r\n      <a href='#' onClick={handleClick.bind(null, 'TODO')} class={value === 'TODO' ? 'is-active' : ''}>未完了</a>\r\n      <a href='#' onClick={handleClick.bind(null, 'DONE')} class={value === 'DONE' ? 'is-active' : ''}>完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\Dinosaur-game-reacjs-fb\\src\\lib\\util.js",[],"D:\\Dinosaur-game-reacjs-fb\\src\\hooks\\fbStorage.js",["114","115"],"import { useState, useEffect } from 'react';\r\n\r\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\r\n\r\nfunction useFbStorage(coll) {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems(coll);\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async item => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(coll, newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async checked => {\r\n    const changes = { done: !checked.done };\r\n    await updateFirebaseItem(coll, changes, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item = { ...item, changes}\r\n      }\r\n      return item;\r\n    })\r\n    setItems(newItems);\r\n  }\r\n\r\n  const clearItems = () => {\r\n    items.map(item => {\r\n      clearFirebaseItem(coll, item);\r\n    })\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFbStorage;","D:\\Dinosaur-game-reacjs-fb\\src\\hooks\\storage.js",[],"D:\\Dinosaur-game-reacjs-fb\\src\\components\\LossGameDiaLog.js",["116","117"],"\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction LossGameDiaLog({ setDisplay, start,setLoss}) {\r\n\r\n  \r\n  const handleClickedCancel = () =>{\r\n    setLoss();\r\n    setDisplay();\r\n  }\r\n  \r\n  const handleClickedStart = () =>{\r\n    setLoss();\r\n    setDisplay();\r\n    start();\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n        <div class='info-loss'>\r\n            <div class='text-loss' id = 'text-loss'></div>\r\n            <div class ='btn-dia-log'>\r\n              <button class='btn-cancel' onClick = {handleClickedCancel} >Cancel</button>\r\n              <button class='btn-start' onClick = {handleClickedStart} >Start</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LossGameDiaLog; ",{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":12},{"ruleId":"118","severity":1,"message":"123","line":9,"column":16,"nodeType":"120","messageId":"121","endLine":9,"endColumn":29},{"ruleId":"118","severity":1,"message":"124","line":13,"column":19,"nodeType":"120","messageId":"121","endLine":13,"endColumn":29},{"ruleId":"118","severity":1,"message":"125","line":14,"column":16,"nodeType":"120","messageId":"121","endLine":14,"endColumn":23},{"ruleId":"118","severity":1,"message":"126","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":12},{"ruleId":"127","severity":1,"message":"128","line":28,"column":11,"nodeType":"129","endLine":28,"endColumn":33},{"ruleId":"118","severity":1,"message":"130","line":16,"column":8,"nodeType":"120","messageId":"121","endLine":16,"endColumn":18},{"ruleId":"118","severity":1,"message":"131","line":19,"column":9,"nodeType":"120","messageId":"121","endLine":19,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":44,"column":42,"nodeType":"134","messageId":"135","endLine":44,"endColumn":44},{"ruleId":"118","severity":1,"message":"136","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":48,"column":21,"nodeType":"129","endLine":48,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":53,"column":19,"nodeType":"129","endLine":53,"endColumn":23},{"ruleId":"118","severity":1,"message":"131","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":20,"column":16,"nodeType":"141","messageId":"142","endLine":20,"endColumn":18},{"ruleId":"118","severity":1,"message":"143","line":4,"column":12,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"144","line":4,"column":19,"nodeType":"120","messageId":"121","endLine":4,"endColumn":26},{"ruleId":"118","severity":1,"message":"145","line":4,"column":28,"nodeType":"120","messageId":"121","endLine":4,"endColumn":38},{"ruleId":"118","severity":1,"message":"146","line":4,"column":40,"nodeType":"120","messageId":"121","endLine":4,"endColumn":50},{"ruleId":"118","severity":1,"message":"147","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"148","line":23,"column":9,"nodeType":"120","messageId":"121","endLine":23,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":84,"column":44,"nodeType":"141","messageId":"142","endLine":84,"endColumn":46},{"ruleId":"139","severity":1,"message":"140","line":199,"column":18,"nodeType":"141","messageId":"142","endLine":199,"endColumn":20},{"ruleId":"118","severity":1,"message":"149","line":330,"column":11,"nodeType":"120","messageId":"121","endLine":330,"endColumn":19},{"ruleId":"118","severity":1,"message":"150","line":333,"column":11,"nodeType":"120","messageId":"121","endLine":333,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":338,"column":7,"nodeType":"153","endLine":338,"endColumn":9,"suggestions":"154"},{"ruleId":"118","severity":1,"message":"148","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":15},{"ruleId":"118","severity":1,"message":"155","line":10,"column":17,"nodeType":"120","messageId":"121","endLine":10,"endColumn":25},{"ruleId":"137","severity":1,"message":"156","line":14,"column":7,"nodeType":"129","endLine":14,"endColumn":102},{"ruleId":"137","severity":1,"message":"156","line":15,"column":7,"nodeType":"129","endLine":15,"endColumn":104},{"ruleId":"137","severity":1,"message":"156","line":16,"column":7,"nodeType":"129","endLine":16,"endColumn":104},{"ruleId":"151","severity":1,"message":"157","line":10,"column":6,"nodeType":"153","endLine":10,"endColumn":13,"suggestions":"158"},{"ruleId":"132","severity":1,"message":"159","line":36,"column":20,"nodeType":"134","messageId":"160","endLine":36,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"147","line":2,"column":28,"nodeType":"120","messageId":"121","endLine":2,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Todo' is defined but never used.","'storeUserInfo' is defined but never used.","'setLoading' is assigned a value but never used.","'setUser' is assigned a value but never used.","'PlayerHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useStorage' is defined but never used.","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'firebase' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'items' is assigned a value but never used.","'addItem' is assigned a value but never used.","'updateItem' is assigned a value but never used.","'clearItems' is assigned a value but never used.","'useState' is defined but never used.","'check' is assigned a value but never used.","'getScore' is assigned a value but never used.","'getHighscore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Start'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'setCheck' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["162"],"Array.prototype.map() expects a return value from arrow function.","expectedInside",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [Start]",{"range":"167","text":"168"},"Update the dependencies array to be: [getItems, items]",{"range":"169","text":"170"},[9716,9718],"[Start]",[278,285],"[getItems, items]"]