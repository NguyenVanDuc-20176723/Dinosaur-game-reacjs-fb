[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/fbStorage.js":"9","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Login.js":"10","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Upload.js":"11","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Game.js":"12","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/LossGameDiaLog.js":"13","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/HomePage.js":"14","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/PlayerHistory.js":"15","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Ranking.js":"16"},{"size":500,"mtime":1622974352559,"results":"17","hashOfConfig":"18"},{"size":1707,"mtime":1623494300100,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1622974352559,"results":"20","hashOfConfig":"18"},{"size":897,"mtime":1622974352559,"results":"21","hashOfConfig":"18"},{"size":797,"mtime":1622974352559,"results":"22","hashOfConfig":"18"},{"size":982,"mtime":1622974352559,"results":"23","hashOfConfig":"18"},{"size":68,"mtime":1622974352559,"results":"24","hashOfConfig":"18"},{"size":2502,"mtime":1623493044709,"results":"25","hashOfConfig":"18"},{"size":1061,"mtime":1623471297098,"results":"26","hashOfConfig":"18"},{"size":2857,"mtime":1623480061391,"results":"27","hashOfConfig":"18"},{"size":1716,"mtime":1623086323055,"results":"28","hashOfConfig":"18"},{"size":10919,"mtime":1623493782428,"results":"29","hashOfConfig":"18"},{"size":692,"mtime":1623419730032,"results":"30","hashOfConfig":"18"},{"size":2545,"mtime":1623493778252,"results":"31","hashOfConfig":"18"},{"size":1030,"mtime":1623482400557,"results":"32","hashOfConfig":"18"},{"size":997,"mtime":1623484533636,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"wkzdgj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"36"},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["78","79"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["80","81"],"import React, { useState } from 'react';\nimport {getKey} from '../lib/util'\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( {onAdd} ) {\n  const [obj, setObj] = useState();\n  \n  function handleChange(evt){\n    setObj({\n      //key: getKey(),\n      text: evt.target.value,\n      done: false\n    })\n  }\n  \n  function handleKeyDown(evt){\n    if(evt.key == 'Enter')\n      onAdd(obj);\n  }\n  \n  return (\n    <div className=\"panel-block\">\n      \n      <input\n        class = 'input'\n        type = 'text'\n        placeholder = 'Todoを入力してください'\n        \n        onChange = {handleChange}\n        onKeyDown = {handleKeyDown}\n        \n      />\n    \n    </div>\n  );\n}\n\nexport default Input;\n",["82","83"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["84","85","86"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter( {value, onChange} ) {\n  function handleClick(key, evt){\n    evt.preventDefault();\n    onChange(key);\n  }\n  return (\n    <div className=\"panel-tabs\">\n      <a href='#' onClick={handleClick.bind(null, 'ALL')} class={value === 'ALL' ? 'is-active' : ''}>全て</a>\n      <a href='#' onClick={handleClick.bind(null, 'TODO')} class={value === 'TODO' ? 'is-active' : ''}>未完了</a>\n      <a href='#' onClick={handleClick.bind(null, 'DONE')} class={value === 'DONE' ? 'is-active' : ''}>完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/fbStorage.js",["87","88"],"import { useState, useEffect } from 'react';\n\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\n\nfunction useFbStorage(coll) {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const _items = await getFirebaseItems(coll);\n    setItems(_items);\n  };\n\n  const addItem = async item => {\n    const newItem = item;\n    await addFirebaseItem(coll, newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async (checked, score) => {\n    const changes = { highscore: score };\n    await updateFirebaseItem(coll, changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearFirebaseItem(coll, item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Login.js",["89","90","91"],"import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n/* ライブラリ */\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\n\nfunction Login() {\n  return (\n    \n      <div className=\"container\">\n        <div>\n          <div className=\"modal-dialog login animated\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                \n                <h4 className=\"modal-title\">Login with</h4>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"box\">\n                  <div className=\"content\">\n                   \n                      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n                    <div className=\"form loginBox\">\n                      <form method=\"post\" action=\"/login\" acceptCharset=\"UTF-8\">\n                        <input id=\"email\" className=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\" />\n                        <input id=\"password\" className=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" />\n                        <input className=\"btn btn-default btn-login\" type=\"button\" defaultValue=\"Login\" onclick=\"loginAjax()\" />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"box\">\n                  <div className=\"content registerBox\" style={{ display: 'none' }}>\n                    <div className=\"form\">\n                      <form method=\"post\" html=\"{:multipart=>true}\" data-remote=\"true\" action=\"/register\" acceptCharset=\"UTF-8\">\n                        <input id=\"email\" className=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\" />\n                        <input id=\"password\" className=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" />\n                        <input id=\"password_confirmation\" className=\"form-control\" type=\"password\" placeholder=\"Repeat Password\" name=\"password_confirmation\" />\n                        <input className=\"btn btn-default btn-register\" type=\"submit\" defaultValue=\"Create account\" name=\"commit\" />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <div className=\"forgot login-footer\">\n                  <span>Looking to\n                    <a >create an account</a>\n                    ?</span>\n                </div>\n                <div className=\"forgot register-footer\" style={{ display: 'none' }}>\n                  <span>Already have an account?</span>\n                  <a >Login</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n    \n  );\n};\n\nexport default Login;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Upload.js",["92"],"import React, { useState } from 'react'\n\n/* ライブラリ */\nimport { uploadImage } from \"../lib/firebase\";\n\nfunction Upload({ userImage, onSletctedImage }) {\n  const [isModal, setIsModal] = useState(false);\n  const active = isModal ? \"is-active\" : \"\";\n  const [imageUrl, setImageUrl] = useState(userImage);\n\n  const handleImage = async event => {\n    const image = event.target.files[0];\n    const imageUrl = await uploadImage(image);\n    onSletctedImage(imageUrl);\n    setImageUrl(imageUrl);\n  };\n\n  const handleClick = () => {\n    setIsModal(!isModal);\n  };\n\n  const ImageViewer = () => {\n    if (!imageUrl) {\n      return <i class=\"fas fa-user\"></i>\n    } else {\n      return (\n        <div>\n          <img src={imageUrl} />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={`modal ${active}`}>\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-content\">\n          <div class=\"file is-boxed\" >\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\n              <span class=\"file-cta\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">画像を選択してください</span>\n              </span>\n            </label>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\n        </div>\n      </div>\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\n        <span class=\"icon\">\n          <ImageViewer />\n        </span>\n      </button>\n    </div >\n  );\n}\n\nexport default Upload","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Game.js",["93","94","95","96","97","98","99"],"import React, { useEffect, useState } from 'react';\nimport useFbStorage from '../hooks/fbStorage';\nimport firebase from 'firebase';\nimport LossGameDiaLog from './LossGameDiaLog'\nimport Dino_chien from '../images/player/dino-chien.png'\nimport Dino_cui from '../images/player/dino-thu.png'\nfunction Game({name, id, DisplayHistory, max, items, addItem, updateTop}){\n    //const [check, setCheck] = useState(true);\n  \n    \n    let canvas, ctx, loss_id; \n\n   \n\n    // Variables\n    let score;\n    let scoreText;\n    let highscore;\n    let highscoreText;\n    let player;\n    let gravity;\n    let obstacles = [];\n    let gameSpeed;\n    let keys = {};\n    let globalID;\n    let check = true;\n    let image_player ;\n    let image_obs;\n    let nam = false;\n    let score_loss = 0;\n    let loss = false;\n\n    \n    const createImagePlayer = () =>{\n        image_player = new Image ();\n        image_player.src = Dino_chien;//require('../images/player/dino-chien.png').default;\n        image_player.alt = 'dino';\n\n    }\n    \n    const setImagePlayer = () =>{\n        if (nam)\n            image_player.src = Dino_cui;//require('../images/player/dino-thu.png').default;\n        else\n            image_player.src = Dino_chien;//require('../images/player/dino-chien.png').default;\n    }\n    \n    const createImageObs = () =>{\n      image_obs = new Image();\n      image_obs.src = require('../images/obs/obs0.png').default;\n      image_obs.alt = 'dino';\n    }\n    const setImageObs = () => {\n        let random = RandomIntInRange(0,10)\n        image_obs.src = require('../images/obs/obs' + random +'.png').default;\n        image_obs.alt = 'obstacle '+ random;\n        return image_obs;\n    }\n    // Event Listeners\n    document.addEventListener('keydown', function (evt) {\n      keys[evt.code] = true;\n    });\n    document.addEventListener('keyup', function (evt) {\n      keys[evt.code] = false;\n    });\n    // nguoi choi\n\n    const player_init = (x,y,w,h,c) => {\n        const obj = {\n         \n            pos_x : x,\n            pos_y : y,\n            width : w,\n            height : h,\n            color : c,\n            dy : 0,\n            jumpForce : 15,\n            originalHeight : h,\n            grounded : false,\n            jumpTimer : 0\n        };\n        \n        return obj;\n    }\n    // method Jump of Player\n    const JumpPlayer = (item) => {\n    \n        if(item.grounded && item.jumpTimer == 0){\n            item.jumpTimer = 1;\n            item.dy -= item.jumpForce;\n        } else if (item.jumpTimer > 0 && item.jumpTimer < 15){\n            item.jumpTimer++;\n            item.dy = -item.jumpForce - (item.jumpTimer / 50);\n        }\n         \n    }\n    // method Draw of Player\n    const DrawPlayer = (item) => {\n      \n        ctx.beginPath();\n        ctx.fillStyle = 'transparent';//item.color;\n        ctx.fillRect(item.pos_x, item.pos_y, item.width, item.height);\n        ctx.drawImage(image_player,item.pos_x,item.pos_y,item.width,item.height);\n        ctx.closePath();\n        \n         \n    }\n    // method Animate of Player\n    const AnimatePlayer = (item) => {\n        \n        if (keys['Space'] || keys['KeyW'] || keys['ArrowUp']){\n            JumpPlayer(item);\n        } else {\n            item.jumpTimer = 0;\n        }\n            \n            \n        if (keys['ShiftLeft'] || keys['KeyS'] || keys['ArrowDown']) {\n            item.height = item.originalHeight / 2;\n            nam = true;\n            setImagePlayer();\n        } else {\n            item.height = item.originalHeight;\n            nam =false;\n            setImagePlayer();\n        }\n        \n        item.pos_y += item.dy;\n                \n        //Gravity\n        if((item.pos_y + item.height) < canvas.height){\n            item.dy += gravity;\n            item.grounded = false;\n        }else {\n            item.dy = 0;\n            item.grounded = true;\n            item.pos_y = canvas.height - item.height;\n        }\n        DrawPlayer(item);\n           \n    }\n    // chuong ngai vat\n    const obstacle_init = (x,y,w,h,c,img) => {\n        const obj = {\n            pos_x : x,\n            pos_y : y,\n            width : w,\n            height : h,\n            color : c,\n            dx : -gameSpeed,\n            image: img\n        };\n      \n        return obj;\n    }\n    const DrawObstacle = (item) => {\n     \n        ctx.beginPath();\n        ctx.fillStyle = 'transparent';//item.color;\n        ctx.fillRect(item.pos_x, item.pos_y, item.width, item.height);\n        ctx.drawImage(item.image,item.pos_x,item.pos_y,item.width,item.height)\n        ctx.closePath();\n    }\n    // method update of Obstacle\n    const UpdateObstacle = (item) =>{\n        \n        item.pos_x += item.dx;\n        DrawObstacle(item);\n        item.dx = -gameSpeed;\n      \n    }\n    \n     //Class Text\n    // constructor of Text\n    const text_init = (t,x,y,a,c,s) => {\n        const obj = {\n            text: t,\n            pos_x : x,\n            pos_y : y,\n            align : a,\n            color : c,\n            size : s,\n        };\n        return obj;\n    }\n    // method Draw of Text\n    const DrawText = (item) =>{\n        ctx.beginPath();\n        ctx.fillStyle = item.color;\n        ctx.font = item.size + \"px sans-serif\";\n        ctx.textAlign = item.align;\n        ctx.fillText(item.text, item.pos_x, item.pos_y);\n        ctx.closePath();\n        \n    }\n    // Game Functions\n    function SpawnObstacle () {\n        let size = RandomIntInRange(20, 70);\n        let type = RandomIntInRange(0, 1);\n        createImageObs();\n        let obstacle = obstacle_init(canvas.width + size, canvas.height - size, size, size, '#2484E4',setImageObs());\n        \n        if (type == 1) {\n            obstacle.pos_y -= player.originalHeight - 10;\n        }\n        obstacles.push(obstacle);\n    }\n    \n    \n    function RandomIntInRange (min, max) {\n        return Math.round(Math.random() * (max - min) + min);\n    }\n    // const maxStt = () =>{\n    //     if( DisplayHistory.length == 0)\n    //         return 0;\n    //     else{\n    //         return Math.max(...DisplayHistory.map( item => item.stt));\n    //     }\n    // }\n    function Start () {\n    \n        canvas  = document.getElementById('game');\n        loss_id = document.getElementById('loss');\n        console.log(canvas);\n        if(canvas.getContext)\n            ctx = canvas.getContext('2d');\n        \n        console.log(ctx);\n        ctx.font = \"20px sans-serif\";\n        loss =false;\n        gameSpeed = 3;\n        gravity = 1;\n        \n        score = 0;\n         \n        highscore = 0;\n        if (window.localStorage.getItem('highscore')) {\n            highscore = Number(window.localStorage.getItem('highscore'));\n        }\n     \n\n        player = player_init(20, 0, 50, 50, '#FF5858');\n        createImagePlayer();\n        scoreText = text_init(\"Score: \" + score, 25, 25, \"left\", \"#212121\", \"20\");\n        highscoreText = text_init(\"Highscore: \" + highscore, canvas.width - 25, 25, \"right\", \"#212121\", \"20\");\n    \n        globalID = requestAnimationFrame(Update);\n    }\n    \n    let initialSpawnTimer = 200;\n    let spawnTimer = initialSpawnTimer;\n    function Update () {\n       // if (!loss)\n            globalID = requestAnimationFrame(Update);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n        spawnTimer--;\n        if (spawnTimer <= 0) {\n            SpawnObstacle();\n            //console.log(obstacles);\n            spawnTimer = initialSpawnTimer - gameSpeed * 8;\n        \n            if (spawnTimer < 60) {\n                spawnTimer = 60;\n            }\n        }\n    \n        // Spawn Enemies\n        for (let i = 0; i < obstacles.length; i++) {\n            let o = obstacles[i];\n    \n            if (o.pos_x + o.width < 0) {\n                obstacles.splice(i, 1);\n            }\n    \n            if (\n                player.pos_x < o.pos_x + o.width &&\n                player.pos_x + player.width > o.pos_x &&\n                player.pos_y < o.pos_y + o.height &&\n                player.pos_y + player.height > o.pos_y\n            ) {\n                \n                score_loss = score;\n                Stop();\n                \n                document.getElementById('text-loss').innerHTML = 'Ban danh duoc: ' + score_loss + '/' + highscore + ' diem.';\n                // set style id = loss\n                loss_id.style.width = canvas.width + 5 + 'px';\n                loss_id.style.height = canvas.height + 5 + 'px';\n                loss_id.style.margin = -(canvas.height + 10) + 'px 0px';\n                loss_id.style.display = 'flex';\n            \n    \n                // add firestore\n                addItem({\n                 \n                    user_id: id ? id : '',\n                    name: name ? name : '',\n                    score: score_loss,\n                    created_at: firebase.firestore.Timestamp.fromDate(new Date())\n                });\n                console.log(score_loss, highscore);\n                if (score_loss >= highscore){\n                     updateTop(score_loss);\n                    \n                }\n                //alert(\"Ban danh duoc \" + score + \" diem.\");\n                obstacles = [];\n                score = 0;\n                spawnTimer = initialSpawnTimer;\n                gameSpeed = 3;\n                window.localStorage.setItem('highscore', highscore);\n                //Stop();\n                loss = true;\n                \n                \n                Stop();\n            }\n    \n            UpdateObstacle(o);\n        }\n    \n        AnimatePlayer(player);\n    \n        score++;\n        if (loss)\n            score = score_loss;\n        scoreText.text = \"Score: \" + score;\n        DrawText(scoreText);\n    \n        if (score > highscore) {\n            highscore = score;\n            highscoreText.text = \"Highscore: \" +  highscore;\n        }\n      \n        DrawText(highscoreText);\n    \n        gameSpeed += 0.003;\n    }\n    const Stop = () => {\n        \n        window.cancelAnimationFrame(globalID);\n         score = score_loss;\n        // console.log(score);\n        \n    }\n    \n    const setLoss = () =>{\n        loss = false;\n    }\n    const setDisplay = () => {\n        loss_id = document.getElementById('loss');\n        \n        loss_id.style.display = 'none';\n    }\n    \n    const setMaxScore = () => {\n        \n        return Math.max(...[DisplayHistory.map(o => o.score)]);\n    }\n    \n    useEffect(() => {\n        \n        Start();\n        \n    },[]);\n    \n    \n    return (\n     \n    <div>\n        \n   \n        <div>\n            <canvas class=\"dinosaur-game\" id=\"game\" width=\"1000\" height=\"450\" >\n            </canvas>\n            <div class='game-loss' id = 'loss'>\n                \n                <LossGameDiaLog \n                \n                    setDisplay = {setDisplay}\n                    start = {Start}\n                    setLoss= {setLoss}\n                />\n            </div>\n            \n        </div>\n        \n    </div>\n    \n    );\n        \n    \n}\n\nexport default Game;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/LossGameDiaLog.js",["100","101"],"\nimport React, { useEffect, useState } from 'react';\n\nfunction LossGameDiaLog({ setDisplay, start,setLoss}) {\n\n  \n  const handleClickedCancel = () =>{\n    setLoss();\n    setDisplay();\n  }\n  \n  const handleClickedStart = () =>{\n    setLoss();\n    setDisplay();\n    start();\n  }\n  \n  return (\n    <div>\n        <div class='info-loss'>\n            <div class='text-loss' id = 'text-loss'></div>\n            <div class ='btn-dia-log'>\n              <button class='btn-cancel' onClick = {handleClickedCancel} >Cancel</button>\n              <button class='btn-start' onClick = {handleClickedStart} >Start</button>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default LossGameDiaLog; ","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/HomePage.js",["102","103","104","105","106"],"import Game from './Game';\nimport PlayerHistory from './PlayerHistory';\n\nimport Ranking from './Ranking';\nimport React, { useEffect, useState } from 'react';\nimport useFbStorage from '../hooks/fbStorage';\nfunction HomePage ({name, id}){\n    \n    const [items, addItem, updateItem, clearItems] = useFbStorage('play-history');\n    const [ranks, addRank, updateRank, clearRank] = useFbStorage('ranking-list');\n    const [check, setCheck] = useState();\n    const cvtDatetoString = (timestamp) => {\n    \n        if(timestamp){\n            let date = timestamp.toDate();\n            let year = date.getFullYear();\n            let month = date.getMonth() + 1;\n            let day = date.getDate();\n            let hour = date.getHours();\n            let minute = date.getMinutes();\n            let sec = date.getSeconds();\n            return year+'-'+month+'-'+day+' '+hour+':'+minute+':'+sec;\n        }\n    };\n    \n    const sortTimeHistory = items.slice().sort((a,b) => b.created_at - a.created_at);\n    \n    \n    const DisplayHistory = sortTimeHistory.filter((item) => {\n        if (item.user_id === id){\n            return true;\n        }else\n            return false;\n    });\n\n    const maxScore = () => {\n       return Math.max(...sortTimeHistory.map(o=>o.score));\n        \n    }\n    const updateTop = (highscore) =>{\n       \n        setCheck(false);\n        if(ranks.length > 0){\n            ranks.forEach( (e) => {\n                \n              if(e.user_id === '123') {\n                  if( highscore > e.highscore){\n                      updateRank(e, highscore);\n                       \n                  }\n                  setCheck(true);\n              }\n            });\n        }\n        if (!check){\n            addRank({\n                highscore: highscore,\n                user_id: id ? id : '123',\n                name: name ? name : '',\n                top: 0\n            });\n        }\n    }\n    return (\n    <div>\n        <Game \n            name = {name}\n            id = {id}\n            DisplayHistory = {sortTimeHistory}\n            max = {maxScore}\n            items = {items}\n            addItem = {addItem}\n            updateTop = {updateTop}\n         \n           \n        />\n        <PlayerHistory \n            name = {name}\n           id = {id}\n           DisplayHistory = {sortTimeHistory}\n           cvtDatetoString = {cvtDatetoString}\n        />\n        <Ranking \n            name = {name}\n            id = {id}\n            DisplayRanking = {ranks}\n            \n        />\n    </div>\n    );\n}\n\nexport default HomePage;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/PlayerHistory.js",["107","108","109","110"],"import useFbStorage from '../hooks/fbStorage';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nfunction PlayerHistory ({name, id, DisplayHistory, cvtDatetoString }){\n  \n    return (\n    <div>\n        \n    \n        <div class = 'title'>Lich su choi</div>\n        <div class = 'history-table' >\n            \n            <table >\n            <tr>\n    \n                <th id ='center'>Date</th>\n                <th>Score</th>\n            </tr>\n            {\n                \n                DisplayHistory.map(item => {\n               \n                    \n                    return(\n                    \n                    <tr>\n      \n                        <td>{cvtDatetoString(item.created_at)}</td>\n                        <td>{item.score}</td>\n                    </tr>\n                   \n                    );\n                })\n            }\n            </table>\n            \n            {DisplayHistory.length} items \n        </div>\n    </div>\n    );\n}\n\nexport default PlayerHistory;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Ranking.js",["111","112","113","114"],"import useFbStorage from '../hooks/fbStorage';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nfunction Ranking({name, id, DisplayRanking}) {\n    \n    \n    return (\n        <div>\n        \n    \n        <div class = 'title'>Ranking</div>\n        <div class = 'rank-table' >\n            \n            <table >\n            <tr>\n        \n                <th id ='center'>Name</th>\n                <th>Highscore</th>\n            </tr>\n            {\n                \n                DisplayRanking.map(item => {\n                \n                    \n                    return(\n                    \n                    <tr>\n      \n                        <td>{item.name}</td>\n                        <td>{item.highscore}</td>\n                    </tr>\n                   \n                    );\n                })\n            }\n            </table>\n            \n            {DisplayRanking.length} items \n        </div>\n    </div>    \n    );\n}\n\nexport default Ranking;",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":9,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":20,"column":16,"nodeType":"125","messageId":"126","endLine":20,"endColumn":18},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":14,"column":7,"nodeType":"131","endLine":14,"endColumn":102},{"ruleId":"129","severity":1,"message":"130","line":15,"column":7,"nodeType":"131","endLine":15,"endColumn":104},{"ruleId":"129","severity":1,"message":"130","line":16,"column":7,"nodeType":"131","endLine":16,"endColumn":104},{"ruleId":"132","severity":1,"message":"133","line":10,"column":6,"nodeType":"134","endLine":10,"endColumn":13,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":36,"column":20,"nodeType":"138","messageId":"139","endLine":36,"endColumn":22},{"ruleId":"119","severity":1,"message":"140","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"141","line":48,"column":21,"nodeType":"131","endLine":48,"endColumn":25},{"ruleId":"129","severity":1,"message":"141","line":53,"column":19,"nodeType":"131","endLine":53,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":28,"column":11,"nodeType":"131","endLine":28,"endColumn":33},{"ruleId":"119","severity":1,"message":"144","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"145","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"146","line":26,"column":9,"nodeType":"121","messageId":"122","endLine":26,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":88,"column":44,"nodeType":"125","messageId":"126","endLine":88,"endColumn":46},{"ruleId":"123","severity":1,"message":"124","line":203,"column":18,"nodeType":"125","messageId":"126","endLine":203,"endColumn":20},{"ruleId":"119","severity":1,"message":"147","line":357,"column":11,"nodeType":"121","messageId":"122","endLine":357,"endColumn":22},{"ruleId":"132","severity":1,"message":"148","line":366,"column":7,"nodeType":"134","endLine":366,"endColumn":9,"suggestions":"149"},{"ruleId":"119","severity":1,"message":"150","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":26},{"ruleId":"119","severity":1,"message":"144","line":2,"column":28,"nodeType":"121","messageId":"122","endLine":2,"endColumn":36},{"ruleId":"119","severity":1,"message":"150","line":5,"column":17,"nodeType":"121","messageId":"122","endLine":5,"endColumn":26},{"ruleId":"119","severity":1,"message":"151","line":9,"column":28,"nodeType":"121","messageId":"122","endLine":9,"endColumn":38},{"ruleId":"119","severity":1,"message":"152","line":9,"column":40,"nodeType":"121","messageId":"122","endLine":9,"endColumn":50},{"ruleId":"119","severity":1,"message":"153","line":10,"column":40,"nodeType":"121","messageId":"122","endLine":10,"endColumn":49},{"ruleId":"119","severity":1,"message":"154","line":29,"column":11,"nodeType":"121","messageId":"122","endLine":29,"endColumn":25},{"ruleId":"119","severity":1,"message":"145","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":20},{"ruleId":"119","severity":1,"message":"140","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"150","line":3,"column":17,"nodeType":"121","messageId":"122","endLine":3,"endColumn":26},{"ruleId":"119","severity":1,"message":"144","line":3,"column":28,"nodeType":"121","messageId":"122","endLine":3,"endColumn":36},{"ruleId":"119","severity":1,"message":"145","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":20},{"ruleId":"119","severity":1,"message":"140","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"150","line":3,"column":17,"nodeType":"121","messageId":"122","endLine":3,"endColumn":26},{"ruleId":"119","severity":1,"message":"144","line":3,"column":28,"nodeType":"121","messageId":"122","endLine":3,"endColumn":36},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'getKey' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["155"],["156"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["157"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'firebase' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'useFbStorage' is defined but never used.","'check' is assigned a value but never used.","'setMaxScore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Start'. Either include it or remove the dependency array.",["158"],"'useEffect' is defined but never used.","'updateItem' is assigned a value but never used.","'clearItems' is assigned a value but never used.","'clearRank' is assigned a value but never used.","'DisplayHistory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getItems, items]",{"range":"163","text":"164"},"Update the dependencies array to be: [Start]",{"range":"165","text":"166"},[269,276],"[getItems, items]",[10375,10377],"[Start]"]